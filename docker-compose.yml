services:
  db:
    container_name: notes-db-dev
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: devmoreir4
      POSTGRES_PASSWORD: notes123
      POSTGRES_DB: notes_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend_network
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U "$${POSTGRES_USER}" -d "$${POSTGRES_DB}"']
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: notes-admin-dev
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - backend_network
    depends_on:
      db:
        condition: service_healthy

  api:
    container_name: notes-api-dev
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: unless-stopped
    environment:
      PORT: "${PORT}"
      DB_CLIENT: "${DB_CLIENT}"
      DB_USER: "${DB_USER}"
      DB_HOST: db
      DB_NAME: "${DB_NAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: "${DB_PORT}"
    ports:
      - "${PORT}:3000"
    networks:
      - backend_network
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
  pgadmin_data:

networks:
  backend_network:
    driver: bridge
